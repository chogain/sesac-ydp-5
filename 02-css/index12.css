.box {
  width: 100px;
  height: 100px;
  background-color: skyblue;
  position: relative;

  /*  - animation-name: @keyframes 애니메이션 이름 지정
        - 시작: from or 0%
        - 중간: 0~100%
        - 끝: to or 100%
    - animation-duration: 한 사이클의 애니메이션이 얼마에 걸쳐 일어날지 결정 (단위: s)
    - animation-delay: 요소(element)가 로드된 후, 언제 애니메이션을 시작할지 결정 (단위: s)
    - animation-iteration-count: 애니메이션 반복 횟수 (default: 1, infinite: 무한 반복)
    - animation-timing-function: 중간 상태들의 전환을 어떤 시간 간격으로 진행할지 지정
        - linear, ease, ease-in, ease-out, ease-in-out 등
    - animation-direction: 애니메이션 종류 후 반복될 때 진행방향 지정
    -   normal, reverse, alternate, alternate-reverse 
*/

  /* animation-name: my-anim;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear; */
}

/* my-anim: 애니메이션의 이름 (개발자 마음대로 설정) */
@keyframes my-anim {
  0% {
    left: 0;
  }
  25% {
    left: 200px;
  }
  50% {
    left: 400px;
  }
  75% {
    left: 200px;
  }
  100% {
    left: 0;
  }
}

.bounce-ball1 {
  position: relative;
  left: 100px;
  top: 0;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: black;

  /* animation: bounce1 1s ease-out infinite alternate; */
}

@keyframes bounce1 {
  from {
    top: 300px;
  }
  to {
    top: 50px;
  }
}

.bounce-ball2 {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: pink;

  position: absolute;
  animation: bounce2 infinite 2s;
}

@keyframes bounce2 {
  from,
  to {
    bottom: 0;
    animation-timing-function: ease-out;
    /* 0px에서 정상속도로 시작 -> 속도 줄이면서 300px이 됨 */
  }
  50% {
    bottom: 300px;
    animation-timing-function: ease-in;
    /* 300px에서 천천히 시작 -> 정상속도가 되면서 0px 도착 */
  }
}
